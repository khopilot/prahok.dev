version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: prahok-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_USER: prahok_user
      POSTGRES_PASSWORD: prahok_dev_pass
      POSTGRES_DB: prahok_db
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - prahok-dev-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: prahok-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - prahok-dev-network

  # API Backend (Development)
  api-dev:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    container_name: prahok-api-dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 5000
      DATABASE_URL: postgresql://prahok_user:prahok_dev_pass@postgres:5432/prahok_db
      REDIS_URL: redis://redis:6379
      JWT_SECRET: dev-jwt-secret
      JWT_REFRESH_SECRET: dev-refresh-secret
      JWT_EXPIRE: 7d
      JWT_REFRESH_EXPIRE: 30d
      FRONTEND_URL: http://147.93.157.63:3000
    volumes:
      - ./apps/api/src:/app/src
      - ./apps/api/prisma:/app/prisma
    ports:
      - "5001:5000"
    depends_on:
      - postgres
      - redis
    networks:
      - prahok-dev-network
    command: npm run dev

  # Frontend (Development)
  web-dev:
    image: node:18-alpine
    container_name: prahok-web-dev
    working_dir: /app
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://147.93.157.63:5001/api
      WATCHPACK_POLLING: "true"
    volumes:
      - ./apps/web:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "3000:3000"
    depends_on:
      - api-dev
    networks:
      - prahok-dev-network
    command: sh -c "npm install && npm run dev -- -H 0.0.0.0"

networks:
  prahok-dev-network:
    driver: bridge

volumes:
  postgres_dev_data: