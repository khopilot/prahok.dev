version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: prahok-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: prahok_user
      POSTGRES_PASSWORD: prahok_secure_pass_2024
      POSTGRES_DB: prahok_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - prahok-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U prahok_user -d prahok_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: prahok-redis
    restart: unless-stopped
    command: redis-server --requirepass prahok_redis_2024
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - prahok-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Backend
  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    container_name: prahok-api
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      DATABASE_URL: postgresql://prahok_user:prahok_secure_pass_2024@postgres:5432/prahok_db
      REDIS_URL: redis://:prahok_redis_2024@redis:6379
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-this}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-your-refresh-token-secret-change-this}
      JWT_EXPIRE: 7d
      JWT_REFRESH_EXPIRE: 30d
      FRONTEND_URL: https://prahok.dev,https://www.prahok.dev,http://147.93.157.63
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - prahok-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Web App
  web:
    build:
      context: ./apps/web
      dockerfile: Dockerfile
    container_name: prahok-web
    restart: unless-stopped
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: https://prahok.dev/api
    depends_on:
      - api
    networks:
      - prahok-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: prahok-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - api
      - web
    networks:
      - prahok-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  prahok-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  nginx_logs: