version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: prahok_postgres
    environment:
      POSTGRES_USER: prahok_user
      POSTGRES_PASSWORD: prahok_secure_pass_2024
      POSTGRES_DB: prahok_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U prahok_user -d prahok_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: prahok_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass prahok_redis_2024
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: prahok_api
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      DATABASE_URL: postgresql://prahok_user:prahok_secure_pass_2024@postgres:5432/prahok_db
      REDIS_URL: redis://:prahok_redis_2024@redis:6379
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key}
      REFRESH_TOKEN_SECRET: ${REFRESH_TOKEN_SECRET:-your-super-secret-refresh-key}
      CLAUDE_API_KEY: ${CLAUDE_API_KEY}
      DAYTONA_API_KEY: ${DAYTONA_API_KEY}
      PORT: 5000
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:5000/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  web:
    build:
      context: .
      dockerfile: Dockerfile.web
    container_name: prahok_web
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      NEXT_PUBLIC_API_URL: http://api:5000
      NEXT_PUBLIC_APP_URL: ${NEXT_PUBLIC_APP_URL:-http://localhost:3000}
    ports:
      - "3000:3000"
    depends_on:
      api:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: prahok_network